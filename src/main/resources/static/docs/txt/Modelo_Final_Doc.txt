Ol√°! Sou o seu Parceiro de Programa√ß√£o e estou aqui para ajudar a documentar este excelente c√≥digo SQL de cria√ß√£o de esquema de base de dados. Este √© um projeto muito bem estruturado!

A sua miss√£o √© a minha miss√£o: vamos criar uma documenta√ß√£o completa e detalhada para cada parte do seu c√≥digo.

---

## üìÑ Documenta√ß√£o Completa do Esquema SQL

Este documento detalha a estrutura da base de dados, composta por v√°rios *schemas* (esquemas) que organizam as tabelas por m√≥dulos funcionais: `core`, `colaboradores`, `clientes`, `logistica`, `inventario`, `social` e `marketplace`.

### Panorama Geral da Solu√ß√£o

O objetivo deste esquema de base de dados √© suportar um sistema de log√≠stica e marketplace focado em reciclagem e gest√£o de res√≠duos. A estrutura √© modular, utiliza chaves estrangeiras (`FOREIGN KEY`) para garantir a integridade referencial e inclui tabelas mestras (`core.pessoas`) para centralizar as identidades.

**Estrutura Principal:**

1.  **`core`**: Identidades (Pessoas) e Permiss√µes (Perfis).
2.  **M√≥dulos Espec√≠ficos**: Detalhes de `colaboradores` e `clientes`, que se ligam a `core.pessoas`.
3.  **`logistica`**: Gest√£o de fretes, ordens de servi√ßo e c√°lculos (incluindo ANTT).
4.  **`marketplace`**: Venda/Doa√ß√£o de produtos e categorias.
5.  **`inventario`**: Gest√£o de stock/estoque de materiais.
6.  **`social`**: Avalia√ß√µes, coment√°rios e funcionalidade de "seguir".

---

### 1. CRIA√á√ÉO DE SCHEMAS

Os *schemas* s√£o utilizados para agrupar objetos relacionados e evitar conflitos de nomes.

| Comando SQL | Descri√ß√£o |
| :--- | :--- |
| `CREATE SCHEMA IF NOT EXISTS core;` | **core**: Cont√©m tabelas mestras de identidade e perfis. |
| `CREATE SCHEMA IF NOT EXISTS colaboradores;` | **colaboradores**: Detalhes espec√≠ficos de Transportadores, Sucateiros, Lojistas e Catadores. |
| `CREATE SCHEMA IF NOT EXISTS clientes;` | **clientes**: Detalhes e pedidos de coleta dos clientes. |
| `CREATE SCHEMA IF NOT EXISTS logistica;` | **logistica**: Gest√£o de Ordens de Servi√ßo, Fretes e Leil√µes. |
| `CREATE SCHEMA IF NOT EXISTS inventario;` | **inventario**: Controlo de stock de materiais. |
| `CREATE SCHEMA IF NOT EXISTS social;` | **social**: Funcionalidades de intera√ß√£o (avalia√ß√µes, coment√°rios, seguidores). |
| `CREATE SCHEMA IF NOT EXISTS marketplace;` | **marketplace**: Venda e Doa√ß√£o de produtos. |

### 2. TIPO DE DADOS PERSONALIZADO (ENUM)

Cria√ß√£o de um tipo enumerado para padronizar e restringir os valores de *status* numa coluna.

| Tipo de Dado | Defini√ß√£o | Tabela de Utiliza√ß√£o |
| :--- | :--- | :--- |
| [cite_start]`logistica.status_servico` [cite: 4] | Define o ciclo de vida de uma Ordem de Servi√ßo de Log√≠stica. | [cite_start]`logistica.ordens_servico` [cite: 4] |
| [cite_start]**Valores ENUM** [cite: 4] | `'PENDENTE'`, `'CONFIRMADO'`, `'COLETADO'`, `'EM_TRANSPORTE'`, `'ENTREGUE'`, `'CANCELADO'` | |

---

### 3. SCHEMA `core`: Identidades e Perfis M:M (Tabelas MESTRAS)

Este √© o m√≥dulo central, que regista todas as pessoas que interagem com o sistema.

#### Tabela: `core.pessoas`

| Coluna | Tipo de Dados | Restri√ß√µes/Descri√ß√£o |
| :--- | :--- | :--- |
| [cite_start]`pessoa_id` [cite: 5] | `BIGSERIAL` | **Chave Prim√°ria**. Identificador √∫nico para cada pessoa. |
| [cite_start]`nome` [cite: 5] | `VARCHAR(255)` | Nome completo. `NOT NULL`. |
| [cite_start]`documento` [cite: 5] | `VARCHAR(18)` | CPF ou CNPJ. **√önico** (`UNIQUE`). `NOT NULL`. |
| [cite_start]`email` [cite: 5] | `VARCHAR(100)` | Endere√ßo de e-mail. **√önico** (`UNIQUE`). `NOT NULL`. |
| [cite_start]`telefone` [cite: 5] | `VARCHAR(20)` | Telefone de contato. |
| [cite_start]`data_cadastro` [cite: 5] | `TIMESTAMP WITHOUT TIME ZONE` | Data e hora do registo. `DEFAULT now()`. |
| [cite_start]`ativo` [cite: 5] | `BOOLEAN` | Indica se a conta est√° ativa. `DEFAULT true`. `NOT NULL`. |
| [cite_start]`is_colaborador` [cite: 5] | `BOOLEAN` | Sinaliza se a pessoa tem um perfil de colaborador (Transportador, Sucateiro, etc.). `DEFAULT false`. `NOT NULL`. |
| [cite_start]`is_cliente` [cite: 6] | `BOOLEAN` | Sinaliza se a pessoa tem um perfil de cliente. `DEFAULT false`. `NOT NULL`. |

#### Tabela: `core.perfis`

| Coluna | Tipo de Dados | Restri√ß√µes/Descri√ß√£o |
| :--- | :--- | :--- |
| [cite_start]`perfil_id` [cite: 6] | `SERIAL` | **Chave Prim√°ria**. Identificador do perfil (Ex: 'Administrador', 'Financeiro'). |
| [cite_start]`nome_perfil` [cite: 6] | `VARCHAR(50)` | Nome do perfil. **√önico** (`UNIQUE`). `NOT NULL`. |
| [cite_start]`descricao` [cite: 6] | `TEXT` | Descri√ß√£o detalhada da fun√ß√£o/permiss√µes do perfil. |

#### Tabela: `core.pessoa_perfil`

| Coluna | Tipo de Dados | Restri√ß√µes/Descri√ß√£o |
| :--- | :--- | :--- |
| [cite_start]`pessoa_id` [cite: 7] | `BIGINT` | **Chave Prim√°ria Composta**. Chave Estrangeira (`FK`) para `core.pessoas`. `ON DELETE CASCADE`. |
| [cite_start]`perfil_id` [cite: 7] | `INTEGER` | **Chave Prim√°ria Composta**. Chave Estrangeira (`FK`) para `core.perfis`. `ON DELETE RESTRICT`. |

#### Tabela: `core.contas_digitais`

| Coluna | Tipo de Dados | Restri√ß√µes/Descri√ß√£o |
| :--- | :--- | :--- |
| [cite_start]`pessoa_id` [cite: 8] | `BIGINT` | **Chave Prim√°ria**. Chave Estrangeira (`FK`) para `core.pessoas`. Liga a pessoa ao sistema *FinTech*. `ON DELETE CASCADE`. |
| [cite_start]`conta_uuid` [cite: 8] | `VARCHAR(64)` | UUID da conta no sistema financeiro externo. **√önico** (`UNIQUE`). `NOT NULL`. |
| [cite_start]`status_kyc` [cite: 8] | `VARCHAR(20)` | *Status* de verifica√ß√£o do usu√°rio (Ex: 'APROVADO', 'PENDENTE'). `DEFAULT 'PENDENTE'`. `NOT NULL`. |
| [cite_start]`data_abertura` [cite: 8] | `TIMESTAMP WITHOUT TIME ZONE` | Data de abertura da conta digital. `DEFAULT now()`. |

---

### 4. SCHEMAS ESPEC√çFICOS DE `colaboradores`

Estas tabelas estendem a informa√ß√£o da tabela `core.pessoas`, sendo a `pessoa_id` a chave de liga√ß√£o.

#### Tabela: `colaboradores.transportadores`

| Coluna | Tipo de Dados | Restri√ß√µes/Descri√ß√£o |
| :--- | :--- | :--- |
| [cite_start]`pessoa_id` [cite: 9] | `BIGINT` | **Chave Prim√°ria**. FK para `core.pessoas`. Detalhes do Transportador. `ON DELETE CASCADE`. |
| [cite_start]`licenca_transporte` [cite: 9] | `VARCHAR(100)` | N√∫mero da licen√ßa de transporte. |

#### Tabela: `colaboradores.sucateiros`

| Coluna | Tipo de Dados | Restri√ß√µes/Descri√ß√£o |
| :--- | :--- | :--- |
| [cite_start]`pessoa_id` [cite: 10] | `BIGINT` | **Chave Prim√°ria**. FK para `core.pessoas`. Detalhes do Sucateiro. `ON DELETE CASCADE`. |
| [cite_start]`razao_social` [cite: 10] | `VARCHAR(255)` | Nome legal da empresa. `NOT NULL`. |
| [cite_start]`cnpj_secundario` [cite: 10] | `VARCHAR(18)` | CNPJ secund√°rio ou filiais. |
| [cite_start]`licenca_ambiental` [cite: 10] | `VARCHAR(100)` | Licen√ßa ambiental de opera√ß√£o. |
| [cite_start]`endereco_patio` [cite: 10] | `TEXT` | Endere√ßo do p√°tio de sucata/armazenagem. `NOT NULL`. |

#### Tabela: `colaboradores.lojistas`

| Coluna | Tipo de Dados | Restri√ß√µes/Descri√ß√£o |
| :--- | :--- | :--- |
| [cite_start]`pessoa_id` [cite: 11] | `BIGINT` | **Chave Prim√°ria**. FK para `core.pessoas`. Detalhes do Lojista. `ON DELETE CASCADE`. |
| [cite_start]`nome_loja` [cite: 11] | `VARCHAR(255)` | Nome da loja ou ponto de coleta. `NOT NULL`. |
| [cite_start]`endereco_coleta` [cite: 11] | `TEXT` | Endere√ßo principal de coleta. `NOT NULL`. |
| [cite_start]`horario_atendimento` [cite: 11] | `VARCHAR(100)` | Hor√°rio de funcionamento/coleta. |

#### Tabela: `colaboradores.catadores`

| Coluna | Tipo de Dados | Restri√ß√µes/Descri√ß√£o |
| :--- | :--- | :--- |
| [cite_start]`pessoa_id` [cite: 12] | `BIGINT` | **Chave Prim√°ria**. FK para `core.pessoas`. Detalhes do Catador. `ON DELETE CASCADE`. |
| [cite_start]`data_nascimento` [cite: 12] | `DATE` | Data de nascimento. |
| [cite_start]`associacao_id` [cite: 12] | `INTEGER` | Identificador de uma poss√≠vel futura tabela de associa√ß√µes. |
| [cite_start]`area_atuacao_geografica` [cite: 12] | `TEXT` | Descri√ß√£o da √°rea onde atua. |

#### Tabela: `colaboradores.veiculos`

| Coluna | Tipo de Dados | Restri√ß√µes/Descri√ß√£o |
| :--- | :--- | :--- |
| [cite_start]`veiculo_id` [cite: 13] | `SERIAL` | **Chave Prim√°ria**. |
| [cite_start]`transportador_pessoa_id` [cite: 13] | `BIGINT` | FK para `colaboradores.transportadores`. Liga o ve√≠culo ao seu respons√°vel. `ON DELETE CASCADE`. `NOT NULL`. |
| [cite_start]`matricula` [cite: 13] | `VARCHAR(20)` | Placa/Matr√≠cula do ve√≠culo. **√önico** (`UNIQUE`). `NOT NULL`. |
| [cite_start]`tipo_veiculo` [cite: 13] | `VARCHAR(50)` | Ex: 'Caminh√£o', 'Fiorino', 'Moto'. `NOT NULL`. |
| [cite_start]`capacidade_peso_kg` [cite: 13] | `NUMERIC(10, 2)` | Capacidade m√°xima de peso em quilogramas. `NOT NULL`. |
| [cite_start]`capacidade_volume_m3` [cite: 13] | `NUMERIC(10, 2)` | Capacidade m√°xima de volume em metros c√∫bicos. |
| [cite_start]`status_veiculo` [cite: 13] | `VARCHAR(20)` | *Status* operacional do ve√≠culo. `DEFAULT 'ATIVO'`. `NOT NULL`. |

---

### 5. SCHEMA `clientes`

Detalhes e registo dos pedidos de coleta feitos pelos clientes.

#### Tabela: `clientes.detalhes`

| Coluna | Tipo de Dados | Restri√ß√µes/Descri√ß√£o |
| :--- | :--- | :--- |
| [cite_start]`pessoa_id` [cite: 14] | `BIGINT` | **Chave Prim√°ria**. FK para `core.pessoas`. Detalhes do Cliente. `ON DELETE CASCADE`. |
| [cite_start]`tipo_cliente` [cite: 14] | `VARCHAR(20)` | Classifica√ß√£o do cliente (Ex: 'PJ', 'PF'). `NOT NULL`. |
| [cite_start]`preferencias_coleta` [cite: 14] | `TEXT` | Notas sobre hor√°rios ou m√©todos de coleta preferidos. |

#### Tabela: `clientes.pedidos_coleta`

| Coluna | Tipo de Dados | Restri√ß√µes/Descri√ß√£o |
| :--- | :--- | :--- |
| [cite_start]`pedido_id` [cite: 15] | `SERIAL` | **Chave Prim√°ria**. |
| [cite_start]`cliente_id` [cite: 15] | `BIGINT` | FK para `clientes.detalhes`. Quem fez o pedido. `ON DELETE RESTRICT`. `NOT NULL`. |
| [cite_start]`descricao_pedido` [cite: 15] | `TEXT` | Descri√ß√£o do material a ser coletado. `NOT NULL`. |
| [cite_start]`data_solicitacao` [cite: 15] | `TIMESTAMP WITH TIME ZONE` | Momento em que o pedido foi criado. `DEFAULT CURRENT_TIMESTAMP`. |

---

### 6. SCHEMA `logistica` (Fluxo de Fretes e C√ÅLCULOS ANTT)

Gerenciamento das movimenta√ß√µes de materiais, desde a ordem de servi√ßo at√© o frete e lances de leil√£o.

#### Tabela: `logistica.modalidades_frete`

| Coluna | Tipo de Dados | Restri√ß√µes/Descri√ß√£o |
| :--- | :--- | :--- |
| [cite_start]`modalidade_id` [cite: 16] | `SERIAL` | **Chave Prim√°ria**. |
| [cite_start]`nome_modalidade` [cite: 16] | `VARCHAR(50)` | Ex: 'Lota√ß√£o', 'Fracionada', 'Urgente'. **√önico** (`UNIQUE`). `NOT NULL`. |

#### Tabela: `logistica.status_leilao`

| Coluna | Tipo de Dados | Restri√ß√µes/Descri√ß√£o |
| :--- | :--- | :--- |
| [cite_start]`status_id` [cite: 17] | `SERIAL` | **Chave Prim√°ria**. |
| [cite_start]`nome_status` [cite: 17] | `VARCHAR(50)` | Ex: 'ABERTO', 'ENCERRADO', 'NEGOCIACAO'. **√önico** (`UNIQUE`). `NOT NULL`. |

#### Tabela: `logistica.antt_parametros`

Armazena valores din√¢micos para o c√°lculo do frete, seguindo a legisla√ß√£o da Ag√™ncia Nacional de Transportes Terrestres (ANTT).

| Coluna | Tipo de Dados | Restri√ß√µes/Descri√ß√£o |
| :--- | :--- | :--- |
| [cite_start]`parametro_id` [cite: 18] | `SERIAL` | **Chave Prim√°ria**. |
| [cite_start]`chave` [cite: 18] | `VARCHAR(100)` | Nome do par√¢metro (Ex: 'C_KM', 'C_EIXO_2'). **√önico** (`UNIQUE`). `NOT NULL`. |
| [cite_start]`valor` [cite: 18] | `NUMERIC(10, 4)` | Valor do par√¢metro. `NOT NULL`. |
| [cite_start]`descricao` [cite: 18] | `TEXT` | Descri√ß√£o do par√¢metro ANTT. |
| [cite_start]`data_vigencia` [cite: 18] | `DATE` | Data de in√≠cio da vig√™ncia do valor. `DEFAULT now()`. |

#### Tabela: `logistica.ordens_servico`

Representa a solicita√ß√£o de um frete ou servi√ßo de coleta/entrega.

| Coluna | Tipo de Dados | Restri√ß√µes/Descri√ß√£o |
| :--- | :--- | :--- |
| [cite_start]`ordem_id` [cite: 19] | `BIGSERIAL` | **Chave Prim√°ria**. |
| [cite_start]`cliente_solicitante_id` [cite: 19] | `BIGINT` | FK para `clientes.detalhes`. O cliente que pediu o servi√ßo. `ON DELETE RESTRICT`. `NOT NULL`. |
| [cite_start]`transportador_designado_id` [cite: 19] | `BIGINT` | FK para `colaboradores.transportadores`. O transportador escolhido. `ON DELETE SET NULL`. |
| [cite_start]`data_solicitacao` [cite: 19] | `TIMESTAMP WITHOUT TIME ZONE` | Data da cria√ß√£o da Ordem. `DEFAULT now()`. |
| [cite_start]`data_prevista_coleta` [cite: 19] | `DATE` | Data agendada para coleta. |
| [cite_start]`endereco_coleta` [cite: 19] | `TEXT` | Endere√ßo completo de onde o material ser√° coletado. `NOT NULL`. |
| [cite_start]`cep_coleta` [cite: 19] | `VARCHAR(8)` | **CEP de Origem**. `NOT NULL`. |
| [cite_start]`cep_destino` [cite: 19] | `VARCHAR(8)` | **CEP de Destino** (Sucateiro ou Loja). `NOT NULL`. |
| [cite_start]`status` [cite: 20] | `logistica.status_servico` | *Status* da Ordem (usa o ENUM criado). `DEFAULT 'PENDENTE'`. `NOT NULL`. |

#### Tabela: `logistica.fretes`

Detalhamento financeiro e log√≠stico de uma Ordem de Servi√ßo, com foco no leil√£o e precifica√ß√£o.

| Coluna | Tipo de Dados | Restri√ß√µes/Descri√ß√£o |
| :--- | :--- | :--- |
| [cite_start]`frete_id` [cite: 21] | `SERIAL` | **Chave Prim√°ria**. |
| [cite_start]`ordem_servico_id` [cite: 21] | `BIGINT` | FK para `logistica.ordens_servico`. Um frete √© um detalhe de uma Ordem. `ON DELETE CASCADE`. `NOT NULL`. |
| [cite_start]`modalidade_id` [cite: 21] | `INTEGER` | FK para `logistica.modalidades_frete`. `ON DELETE RESTRICT`. `NOT NULL`. |
| [cite_start]`status_leilao_id` [cite: 21] | `INTEGER` | FK para `logistica.status_leilao`. `ON DELETE RESTRICT`. `NOT NULL`. |
| [cite_start]`data_expiracao_negociacao` [cite: 21] | `TIMESTAMP WITH TIME ZONE` | Prazo final para receber lances. |
| [cite_start]`preco_sugerido` [cite: 21] | `NUMERIC(10, 2)` | Pre√ßo que o sistema sugere pagar. |
| [cite_start]`antt_piso_minimo` [cite: 21] | `NUMERIC(10, 2)` | Valor m√≠nimo legal que pode ser pago. |
| [cite_start]`custo_base_mercado` [cite: 21] | `NUMERIC(10, 2)` | Cota√ß√£o de refer√™ncia de mercado. |
| [cite_start]`distancia_km` [cite: 22] | `NUMERIC(10, 2)` | Dist√¢ncia rodovi√°ria calculada. |
| [cite_start]`transportador_selecionado_id` [cite: 22] | `BIGINT` | FK para `colaboradores.transportadores`. O transportador que ganhou o leil√£o. `ON DELETE SET NULL`. |

#### Tabela: `logistica.itens_frete`

Detalha os materiais transportados em um frete espec√≠fico.

| Coluna | Tipo de Dados | Restri√ß√µes/Descri√ß√£o |
| :--- | :--- | :--- |
| [cite_start]`item_frete_id` [cite: 23] | `SERIAL` | **Chave Prim√°ria**. |
| [cite_start]`frete_id` [cite: 23] | `INTEGER` | FK para `logistica.fretes`. `ON DELETE CASCADE`. `NOT NULL`. |
| [cite_start]`descricao` [cite: 23] | `TEXT` | Descri√ß√£o do item (Ex: 'Garrafas PET'). `NOT NULL`. |
| [cite_start]`tipo_material` [cite: 23] | `VARCHAR(100)` | Classifica√ß√£o do material (Ex: 'Pl√°stico', 'Vidro'). |
| [cite_start]`peso_estimado_kg` [cite: 23] | `NUMERIC(10, 2)` | Peso estimado do item em kg. `NOT NULL`. |
| [cite_start]`volume_estimado_m3` [cite: 23] | `NUMERIC(10, 2)` | Volume estimado do item em m¬≥. |

#### Tabela: `logistica.lances`

Registo dos lances feitos pelos transportadores para um frete em leil√£o.

| Coluna | Tipo de Dados | Restri√ß√µes/Descri√ß√£o |
| :--- | :--- | :--- |
| [cite_start]`lance_id` [cite: 24] | `SERIAL` | **Chave Prim√°ria**. |
| [cite_start]`frete_id` [cite: 24] | `INTEGER` | FK para `logistica.fretes`. `ON DELETE CASCADE`. `NOT NULL`. |
| [cite_start]`transportador_id` [cite: 24] | `BIGINT` | FK para `colaboradores.transportadores`. Quem fez o lance. `ON DELETE RESTRICT`. `NOT NULL`. |
| [cite_start]`valor_lance` [cite: 24] | `NUMERIC(10, 2)` | O valor proposto pelo transportador. `NOT NULL`. |
| [cite_start]`data_lance` [cite: 24] | `TIMESTAMP WITH TIME ZONE` | Momento em que o lance foi registado. `DEFAULT CURRENT_TIMESTAMP`. |
| [cite_start]`is_vencedor` [cite: 24] | `BOOLEAN` | Indica se este lance foi o selecionado. `DEFAULT false`. |
| [cite_start]`motivo_cancelamento` [cite: 24] | `TEXT` | Justificativa se o lance foi cancelado. |

#### Tabela: `logistica.cotacoes_materiais`

Cota√ß√£o de pre√ßo de mercado para os materiais recicl√°veis.

| Coluna | Tipo de Dados | Restri√ß√µes/Descri√ß√£o |
| :--- | :--- | :--- |
| [cite_start]`cotacao_id` [cite: 25] | `SERIAL` | **Chave Prim√°ria**. |
| [cite_start]`material_nome` [cite: 25] | `VARCHAR(100)` | Nome do material (Ex: 'Alum√≠nio', 'PET'). **√önico** (`UNIQUE`). `NOT NULL`. |
| [cite_start]`preco_medio_kg` [cite: 25] | `NUMERIC(10, 2)` | Pre√ßo m√©dio por quilograma. `NOT NULL`. |
| [cite_start]`unidade_medida` [cite: 25] | `VARCHAR(10)` | Unidade utilizada. `DEFAULT 'KG'`. `NOT NULL`. |
| [cite_start]`data_atualizacao` [cite: 25] | `TIMESTAMP WITH TIME ZONE` | √öltima atualiza√ß√£o da cota√ß√£o. `DEFAULT CURRENT_TIMESTAMP`. |

---

### 7. SCHEMA `marketplace`

Gest√£o de produtos para venda ou doa√ß√£o, incluindo categorias.

#### Tabela: `marketplace.categorias`

| Coluna | Tipo de Dados | Restri√ß√µes/Descri√ß√£o |
| :--- | :--- | :--- |
| [cite_start]`categoria_id` [cite: 26] | `SERIAL` | **Chave Prim√°ria**. |
| [cite_start]`nome_categoria` [cite: 26] | `VARCHAR(100)` | Nome da categoria (Ex: 'Eletr√≥nicos', 'M√≥veis'). **√önico** (`UNIQUE`). `NOT NULL`. |
| [cite_start]`tipo_geral` [cite: 26] | `VARCHAR(20)` | Classifica√ß√£o ampla (Ex: 'Venda', 'Servi√ßo'). `NOT NULL`. |

#### Tabela: `marketplace.produtos`

| Coluna | Tipo de Dados | Restri√ß√µes/Descri√ß√£o |
| :--- | :--- | :--- |
| [cite_start]`produto_id` [cite: 27] | `SERIAL` | **Chave Prim√°ria**. |
| [cite_start]`vendedor_id` [cite: 27] | `BIGINT` | FK para `core.pessoas`. O vendedor/doador. `ON DELETE RESTRICT`. `NOT NULL`. |
| [cite_start]`categoria_id` [cite: 27] | `INTEGER` | FK para `marketplace.categorias`. `ON DELETE RESTRICT`. `NOT NULL`. |
| [cite_start]`titulo` [cite: 27] | `VARCHAR(255)` | T√≠tulo do an√∫ncio. `NOT NULL`. |
| [cite_start]`descricao` [cite: 27] | `TEXT` | Descri√ß√£o detalhada do produto. |
| [cite_start]`preco` [cite: 27] | `NUMERIC(10, 2)` | Pre√ßo de venda. `NOT NULL`. |
| [cite_start]`quantidade` [cite: 27] | `INTEGER` | Quantidade dispon√≠vel. `DEFAULT 1`. `NOT NULL`. |
| [cite_start]`unidade_medida` [cite: 27] | `VARCHAR(10)` | Unidade (Ex: 'UN', 'KG'). `DEFAULT 'UN'`. |
| [cite_start]`data_publicacao` [cite: 27] | `TIMESTAMP WITH TIME ZONE` | Momento da publica√ß√£o. `DEFAULT CURRENT_TIMESTAMP`. |
| [cite_start]`is_disponivel` [cite: 27] | `BOOLEAN` | Disponibilidade do item. `DEFAULT true`. `NOT NULL`. |
| [cite_start]`is_doacao` [cite: 27] | `BOOLEAN` | Indica se o item √© uma doa√ß√£o. `DEFAULT false`. `NOT NULL`. |
| [cite_start]**Restri√ß√£o** [cite: 28] | `check_preco_doacao` | Garante que se `is_doacao = TRUE`, o `preco` deve ser `0.00`. Se `is_doacao = FALSE`, o `preco` deve ser maior que `0.00`. |

---

### 8. SCHEMA `inventario`

Controlo de estoque de materiais, tipicamente em um p√°tio de sucateiro.

#### Tabela: `inventario.estoque`

| Coluna | Tipo de Dados | Restri√ß√µes/Descri√ß√£o |
| :--- | :--- | :--- |
| [cite_start]`estoque_id` [cite: 29] | `BIGSERIAL` | **Chave Prim√°ria**. |
| [cite_start]`gestor_id` [cite: 29] | `BIGINT` | FK para `core.pessoas`. O respons√°vel pela gest√£o do estoque. `ON DELETE RESTRICT`. `NOT NULL`. |
| [cite_start]`tipo_material` [cite: 29] | `VARCHAR(50)` | Tipo de material em estoque (Ex: 'Cobre', 'Pl√°stico PET'). `NOT NULL`. |
| [cite_start]`quantidade_kg` [cite: 29] | `NUMERIC(10, 2)` | Quantidade em quilogramas. `NOT NULL`. |
| [cite_start]`data_entrada` [cite: 29] | `TIMESTAMP WITHOUT TIME ZONE` | Data da entrada no estoque. `DEFAULT now()`. |
| [cite_start]`localizacao` [cite: 29] | `TEXT` | Localiza√ß√£o f√≠sica no p√°tio. |

---

### 9. SCHEMA `social`

Funcionalidades de intera√ß√£o social e *feedback* de usu√°rios.

#### Tabela: `social.avaliacoes`

| Coluna | Tipo de Dados | Restri√ß√µes/Descri√ß√£o |
| :--- | :--- | :--- |
| [cite_start]`avaliacao_id` [cite: 30] | `BIGSERIAL` | **Chave Prim√°ria**. |
| [cite_start]`avaliador_id` [cite: 30] | `BIGINT` | FK para `core.pessoas`. Quem avaliou. `ON DELETE RESTRICT`. `NOT NULL`. |
| [cite_start]`avaliado_id` [cite: 30] | `BIGINT` | FK para `core.pessoas`. Quem foi avaliado (Ex: um Transportador, um Vendedor). `ON DELETE RESTRICT`. `NOT NULL`. |
| [cite_start]`ordem_servico_id` [cite: 30] | `BIGINT` | FK para `logistica.ordens_servico`. Avalia√ß√£o de um servi√ßo. `ON DELETE SET NULL`. |
| [cite_start]`produto_id` [cite: 30] | `INTEGER` | FK para `marketplace.produtos`. Avalia√ß√£o de um produto. `ON DELETE SET NULL`. |
| [cite_start]`pontuacao` [cite: 30] | `SMALLINT` | Nota de 1 a 5. `NOT NULL`. |
| [cite_start]`comentario` [cite: 30] | `TEXT` | Coment√°rio escrito. |
| [cite_start]`data_avaliacao` [cite: 30] | `TIMESTAMP WITH TIME ZONE` | Data e hora da avalia√ß√£o. `DEFAULT CURRENT_TIMESTAMP`. |
| [cite_start]**Restri√ß√£o** [cite: 31] | `check_related_entity` | Garante que cada avalia√ß√£o se refere a uma `ordem_servico` **OU** um `produto`, mas n√£o a ambos. |

#### Tabela: `social.comentarios`

| Coluna | Tipo de Dados | Restri√ß√µes/Descri√ß√£o |
| :--- | :--- | :--- |
| [cite_start]`comentario_id` [cite: 32] | `BIGSERIAL` | **Chave Prim√°ria**. |
| [cite_start]`autor_id` [cite: 32] | `BIGINT` | FK para `core.pessoas`. Quem escreveu. `ON DELETE RESTRICT`. `NOT NULL`. |
| [cite_start]`produto_id` [cite: 32] | `INTEGER` | FK para `marketplace.produtos`. O coment√°rio est√° sempre ligado a um produto. `ON DELETE CASCADE`. `NOT NULL`. |
| [cite_start]`texto_comentario` [cite: 32] | `TEXT` | Conte√∫do do coment√°rio. `NOT NULL`. |
| [cite_start]`data_comentario` [cite: 32] | `TIMESTAMP WITH TIME ZONE` | Momento em que foi feito. `DEFAULT CURRENT_TIMESTAMP`. |
| [cite_start]`comentario_pai_id` [cite: 32] | `BIGINT` | FK auto-referente para `social.comentarios`. Permite respostas (*replies*). `ON DELETE SET NULL`. |

#### Tabela: `social.seguidores`

Funcionalidade de seguir entre usu√°rios.

| Coluna | Tipo de Dados | Restri√ß√µes/Descri√ß√£o |
| :--- | :--- | :--- |
| [cite_start]`seguidor_id` [cite: 33] | `BIGINT` | **Chave Prim√°ria Composta**. FK para `core.pessoas`. Quem segue. `ON DELETE CASCADE`. |
| [cite_start]`seguido_id` [cite: 33] | `BIGINT` | **Chave Prim√°ria Composta**. FK para `core.pessoas`. Quem √© seguido. `ON DELETE CASCADE`. |
| [cite_start]**Restri√ß√£o** [cite: 33] | `check_self_follow` | Impede que o `seguidor_id` seja igual ao `seguido_id` (auto-seguimento). |

Espero que esta documenta√ß√£o detalhada seja √∫til para a sua implementa√ß√£o e gest√£o da base de dados! Se tiver alguma d√∫vida ou precisar de mais detalhes sobre alguma parte, √© s√≥ dizer!
